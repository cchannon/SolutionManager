#pragma checksum "C:\Users\CharlesChannon\Source\Repos\SolutionManager\MainWindow.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "D418EBC1CEE851C580671CBC541A86B94A736EF89867A9380FA53B7ADF0FDF4F"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SolutionManager
{
    partial class MainWindow : 
        global::Microsoft.UI.Xaml.Window, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 10: // MainWindow.xaml line 68
                {
                    global::Microsoft.UI.Xaml.Controls.Grid element10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Grid)element10).Loaded += this.Grid_Loaded;
                }
                break;
            case 11: // MainWindow.xaml line 71
                {
                    this.splashScreen = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            case 12: // MainWindow.xaml line 422
                {
                    this.progressRingOverlay = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 13: // MainWindow.xaml line 426
                {
                    this.jobDetailsDialog = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ContentDialog>(target);
                }
                break;
            case 14: // MainWindow.xaml line 430
                {
                    this.jobNameTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 15: // MainWindow.xaml line 432
                {
                    this.jobIdTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 16: // MainWindow.xaml line 434
                {
                    this.jobStatusTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 17: // MainWindow.xaml line 436
                {
                    this.jobEnvironmentTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 18: // MainWindow.xaml line 438
                {
                    this.jobTimestampTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 19: // MainWindow.xaml line 440
                {
                    this.jobPredecessorTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 20: // MainWindow.xaml line 442
                {
                    this.jobOutputTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 21: // MainWindow.xaml line 444
                {
                    this.jobErrorTextBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 22: // MainWindow.xaml line 81
                {
                    this.commandPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 23: // MainWindow.xaml line 86
                {
                    this.mainContent = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 24: // MainWindow.xaml line 410
                {
                    this.pivotFooter = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 25: // MainWindow.xaml line 416
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element25 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element25).Checked += this.PivotRadioButton_Checked;
                }
                break;
            case 26: // MainWindow.xaml line 417
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element26 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element26).Checked += this.PivotRadioButton_Checked;
                }
                break;
            case 27: // MainWindow.xaml line 418
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element27 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element27).Checked += this.PivotRadioButton_Checked;
                }
                break;
            case 28: // MainWindow.xaml line 92
                {
                    this.exportContent = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 29: // MainWindow.xaml line 181
                {
                    this.updateContent = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 30: // MainWindow.xaml line 320
                {
                    this.importContent = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 31: // MainWindow.xaml line 381
                {
                    this.jobsPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 32: // MainWindow.xaml line 387
                {
                    this.jobsListBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ListBox)this.jobsListBox).SelectionChanged += this.JobsListBox_SelectionChanged;
                }
                break;
            case 34: // MainWindow.xaml line 372
                {
                    this.activatePluginsCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 35: // MainWindow.xaml line 373
                {
                    this.stageAndUpgradeCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 36: // MainWindow.xaml line 374
                {
                    this.publishAfterImportCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 37: // MainWindow.xaml line 375
                {
                    this.forceOverwriteCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 38: // MainWindow.xaml line 377
                {
                    this.importButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.importButton).Click += this.ImportButton_Click;
                }
                break;
            case 39: // MainWindow.xaml line 368
                {
                    this.importJsonPathTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 40: // MainWindow.xaml line 369
                {
                    this.importJsonFileBrowse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.importJsonFileBrowse).Click += this.BrowseFileButton_Click;
                }
                break;
            case 41: // MainWindow.xaml line 358
                {
                    this.importZipPathTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 42: // MainWindow.xaml line 359
                {
                    this.importZipFileBrowse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.importZipFileBrowse).Click += this.BrowseFileButton_Click;
                }
                break;
            case 43: // MainWindow.xaml line 333
                {
                    this.importEnvironmentList = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListBox>(target);
                }
                break;
            case 44: // MainWindow.xaml line 199
                {
                    this.guidSwapPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 45: // MainWindow.xaml line 244
                {
                    this.settingsFilePanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 46: // MainWindow.xaml line 266
                {
                    this.singleFilePanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 47: // MainWindow.xaml line 279
                {
                    this.recursiveDirectoryPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 48: // MainWindow.xaml line 314
                {
                    this.evPreviewDataGrid = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                }
                break;
            case 49: // MainWindow.xaml line 315
                {
                    this.crPreviewDataGrid = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                }
                break;
            case 50: // MainWindow.xaml line 316
                {
                    this.generateSettings = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.generateSettings).Click += this.GenerateSettings_Click;
                }
                break;
            case 51: // MainWindow.xaml line 310
                {
                    this.crCsvFilePathTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 52: // MainWindow.xaml line 311
                {
                    this.crCsvFilePathBrowse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.crCsvFilePathBrowse).Click += this.BrowseFileButton_Click;
                }
                break;
            case 53: // MainWindow.xaml line 298
                {
                    this.evCsvFilePathTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 54: // MainWindow.xaml line 299
                {
                    this.evCsvFilePathBrowse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.evCsvFilePathBrowse).Click += this.BrowseFileButton_Click;
                }
                break;
            case 55: // MainWindow.xaml line 286
                {
                    this.settingsTargetDirTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 56: // MainWindow.xaml line 287
                {
                    this.settingsTargetDirBrowse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.settingsTargetDirBrowse).Click += this.BrowseFolderButton_Click;
                }
                break;
            case 57: // MainWindow.xaml line 273
                {
                    this.settingsZipFilePathTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 58: // MainWindow.xaml line 274
                {
                    this.settingsZipFilePathBrowse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.settingsZipFilePathBrowse).Click += this.BrowseFileButton_Click;
                }
                break;
            case 59: // MainWindow.xaml line 263
                {
                    this.generateModeToggle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ToggleSwitch>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ToggleSwitch)this.generateModeToggle).Toggled += this.GenerateModeToggle_Toggled;
                }
                break;
            case 60: // MainWindow.xaml line 240
                {
                    this.csvPreviewDataGrid = global::WinRT.CastExtensions.As<global::CommunityToolkit.WinUI.UI.Controls.DataGrid>(target);
                }
                break;
            case 61: // MainWindow.xaml line 241
                {
                    this.swapGuidsButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.swapGuidsButton).Click += this.ReplaceStrings_Click;
                }
                break;
            case 62: // MainWindow.xaml line 237
                {
                    this.updateGuidsTargetDirTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 63: // MainWindow.xaml line 238
                {
                    this.updateGuidsTargetDirBrowse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.updateGuidsTargetDirBrowse).Click += this.BrowseFolderButton_Click;
                }
                break;
            case 64: // MainWindow.xaml line 228
                {
                    this.updateCsvFilePathTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 65: // MainWindow.xaml line 229
                {
                    this.updateGuidsCsvBrowse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.updateGuidsCsvBrowse).Click += this.BrowseFileButton_Click;
                }
                break;
            case 66: // MainWindow.xaml line 219
                {
                    this.updateZipFilePathTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 67: // MainWindow.xaml line 220
                {
                    this.updateGuidsZipBrowse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.updateGuidsZipBrowse).Click += this.BrowseFileButton_Click;
                }
                break;
            case 68: // MainWindow.xaml line 195
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element68 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element68).Checked += this.UpdateRadioButton_Checked;
                }
                break;
            case 69: // MainWindow.xaml line 196
                {
                    global::Microsoft.UI.Xaml.Controls.RadioButton element69 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RadioButton>(target);
                    ((global::Microsoft.UI.Xaml.Controls.RadioButton)element69).Checked += this.UpdateRadioButton_Checked;
                }
                break;
            case 70: // MainWindow.xaml line 110
                {
                    this.solutionsListPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 71: // MainWindow.xaml line 121
                {
                    this.solutionDetailsPanel = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 72: // MainWindow.xaml line 164
                {
                    this.includeSettingsListBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListBox>(target);
                }
                break;
            case 73: // MainWindow.xaml line 150
                {
                    this.exportAsManagedCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 74: // MainWindow.xaml line 153
                {
                    this.overwriteCheckBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.CheckBox>(target);
                }
                break;
            case 75: // MainWindow.xaml line 156
                {
                    this.publishButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.publishButton).Click += this.PublishButton_Click;
                }
                break;
            case 76: // MainWindow.xaml line 157
                {
                    this.exportButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.exportButton).Click += this.ExportButton_Click;
                }
                break;
            case 77: // MainWindow.xaml line 146
                {
                    this.zipFilePathTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 78: // MainWindow.xaml line 147
                {
                    this.exportPathBrowse = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.exportPathBrowse).Click += this.BrowseFolderButton_Click;
                }
                break;
            case 79: // MainWindow.xaml line 117
                {
                    this.solutionsList = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ListBox)this.solutionsList).SelectionChanged += this.SolutionList_SelectionChanged;
                }
                break;
            case 80: // MainWindow.xaml line 106
                {
                    this.environmentList = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ListBox)this.environmentList).SelectionChanged += this.EnvironmentList_SelectionChanged;
                }
                break;
            case 81: // MainWindow.xaml line 82
                {
                    this.authProfileText = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 82: // MainWindow.xaml line 83
                {
                    this.changeAuthProfileButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)this.changeAuthProfileButton).Click += this.ChangeAuthProfileButton_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2411")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            return returnValue;
        }
    }
}

